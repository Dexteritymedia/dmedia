# Generated by Django 4.0.2 on 2022-07-30 20:34

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('home', '0002_create_homepage'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': 'About',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('to_address', models.CharField(blank=True, help_text='Optional - form submissions will be emailed to these addresses. Separate multiple addresses by comma.', max_length=255, verbose_name='to address')),
                ('from_address', models.CharField(blank=True, max_length=255, verbose_name='from address')),
                ('subject', models.CharField(blank=True, max_length=255, verbose_name='subject')),
                ('heading', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('thank_you_text', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ServicePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.core.fields.RichTextField(blank=True)),
                ('image', wagtail.core.fields.StreamField([('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('caption', wagtail.core.blocks.CharBlock(max_length=60, required=False))]))], blank=True, null=True)),
                ('service_contact', wagtail.core.fields.StreamField([('service_contact', wagtail.core.blocks.StructBlock([('contact_link', wagtail.core.blocks.PageChooserBlock(page_type=['home.FormPage'], required=False)), ('text', wagtail.core.blocks.CharBlock(default='Lets talk', max_length=60, required=False))]))], blank=True, null=True)),
                ('service_testimony', wagtail.core.fields.StreamField([('service_testimony', wagtail.core.blocks.StructBlock([('jumbotron_color', wagtail.core.blocks.CharBlock(default='#000000', help_text='Enter a hexdecimal color for the background e.g #000000', max_length=40, required=False)), ('heading', wagtail.core.blocks.CharBlock(max_length=60, required=True)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link'], required=False)), ('service_testimony', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link'], required=False))])))]))], blank=True, null=True)),
                ('service_list', wagtail.core.fields.StreamField([('service_list', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(default='Our Services', max_length=60, required=True)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link'], required=False)), ('list_item', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], blank=True, null=True)),
                ('faq', wagtail.core.fields.StreamField([('faq', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock(required=True)), ('answer', wagtail.core.blocks.CharBlock(max_length=60, required=True))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterModelOptions(
            name='homepage',
            options={'verbose_name': 'Home', 'verbose_name_plural': 'Home'},
        ),
        migrations.AddField(
            model_name='homepage',
            name='contact',
            field=wagtail.core.fields.StreamField([('contact', wagtail.core.blocks.StructBlock([('contact', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('color', wagtail.core.blocks.CharBlock(default='#000000', help_text='Enter a hexdecimal color for the background e.g #000000', max_length=40, required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic'], required=False)), ('text_color', wagtail.core.blocks.CharBlock(default='#ffffff', help_text='Enter a hexdecimal color for the text e.g #000000 or red', max_length=40, required=False)), ('button_page', wagtail.core.blocks.PageChooserBlock(page_type=['home.FormPage'], required=False))])))]))], blank=True, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='jumbotron',
            field=wagtail.core.fields.StreamField([('jumbotron', wagtail.core.blocks.StructBlock([('jumbotron', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link', 'code', 'superscript', 'subscript', 'strikethrough', 'blockquote'], required=False)), ('color', wagtail.core.blocks.CharBlock(default='#000000', help_text='Enter a hexdecimal color for the background e.g #000000', max_length=40, required=False)), ('text_color', wagtail.core.blocks.CharBlock(default='#ffffff', help_text='Enter a hexdecimal color for the text e.g #000000 or red', max_length=40, required=False)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_url', wagtail.core.blocks.URLBlock(required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False))])))]))], blank=True, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='menu',
            field=wagtail.core.fields.StreamField([('menu', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(max_length=60, required=True)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic'], required=True)), ('button_page', wagtail.core.blocks.PageChooserBlock(page_type=['home.ServicePage'], required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False))]))], blank=True, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='service',
            field=wagtail.core.fields.StreamField([('service', wagtail.core.blocks.StructBlock([('jumbotron_color', wagtail.core.blocks.CharBlock(default='#000000', help_text='Enter a hexdecimal color for the background e.g #000000', max_length=40, required=False)), ('title', wagtail.core.blocks.CharBlock(default='Our Services', max_length=60, required=True)), ('button_page', wagtail.core.blocks.PageChooserBlock(page_type=['home.ServiceIndex'], required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False)), ('service', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link', 'code', 'superscript', 'subscript', 'strikethrough', 'blockquote'], required=False)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False))])))]))], blank=True, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='testimony',
            field=wagtail.core.fields.StreamField([('testimony', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=60, required=False)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic'], required=True)), ('name', wagtail.core.blocks.CharBlock(max_length=60, required=False))]))], blank=True, null=True),
        ),
        migrations.AddField(
            model_name='homepage',
            name='work',
            field=wagtail.core.fields.StreamField([('work', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(max_length=60, required=True)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic'], required=True)), ('card', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('select', wagtail.core.blocks.BooleanBlock(help_text='Select to make image right', required=False, verbose_name='Image right')), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=False)), ('text', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link', 'code', 'superscript', 'subscript', 'strikethrough', 'blockquote'], required=False)), ('button_page', wagtail.core.blocks.PageChooserBlock(required=False)), ('button_url', wagtail.core.blocks.URLBlock(required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False))])))]))], blank=True, null=True),
        ),
        migrations.CreateModel(
            name='ServiceIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.core.fields.RichTextField(blank=True)),
                ('service_page', wagtail.core.fields.StreamField([('service_list', wagtail.core.blocks.StructBlock([('jumbotron_color', wagtail.core.blocks.CharBlock(help_text='Enter a hexdecimal color for the background e.g #000000', max_length=40, required=False)), ('service_index', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image_icon', wagtail.images.blocks.ImageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock(max_length=40, required=False))])))]))], blank=True, null=True)),
                ('service_main', wagtail.core.fields.StreamField([('service_main', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.core.blocks.CharBlock(max_length=60, required=True)), ('description', wagtail.core.blocks.RichTextBlock(features=['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'bold', 'italic', 'link'], required=False)), ('button_page', wagtail.core.blocks.PageChooserBlock(page_type=['home.ServicePage'], required=False)), ('button_text', wagtail.core.blocks.CharBlock(default='Read More', max_length=40, required=False))]))], blank=True, null=True)),
                ('client', wagtail.core.fields.StreamField([('client', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.core.blocks.CharBlock(max_length=60, required=False))]))], blank=True, null=True)),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FormField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('clean_name', models.CharField(blank=True, default='', help_text='Safe name of the form field, the label converted to ascii_snake_case', max_length=255, verbose_name='name')),
                ('label', models.CharField(help_text='The label of the form field', max_length=255, verbose_name='label')),
                ('field_type', models.CharField(choices=[('singleline', 'Single line text'), ('multiline', 'Multi-line text'), ('email', 'Email'), ('number', 'Number'), ('url', 'URL'), ('checkbox', 'Checkbox'), ('checkboxes', 'Checkboxes'), ('dropdown', 'Drop down'), ('multiselect', 'Multiple select'), ('radio', 'Radio buttons'), ('date', 'Date'), ('datetime', 'Date/time'), ('hidden', 'Hidden field')], max_length=16, verbose_name='field type')),
                ('required', models.BooleanField(default=True, verbose_name='required')),
                ('choices', models.TextField(blank=True, help_text='Comma separated list of choices. Only applicable in checkboxes, radio and dropdown.', verbose_name='choices')),
                ('default_value', models.CharField(blank=True, help_text='Default value. Comma separated values supported for checkboxes.', max_length=255, verbose_name='default value')),
                ('help_text', models.CharField(blank=True, max_length=255, verbose_name='help text')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_fields', to='home.formpage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
